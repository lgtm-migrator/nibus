"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.action = action;
exports.default = void 0;

require("source-map-support/register");

var _handlers = require("../handlers");

async function action(device, args) {
  const idOrName = args.id[0];

  if (idOrName) {
    const id = device.getId(idOrName);
    const value = Object.values((await device.read(id)))[0];
    if (value.error) throw new Error(value.error);
    args.quiet || console.log(JSON.stringify(args.raw ? device.getRawValue(id) : value));
  }
}

const readCommand = {
  command: 'read',
  describe: 'прочитать значение переменной',
  builder: argv => argv.demandOption(['id', 'name', 'mac', 'm']).check(argv => {
    if (Array.isArray(argv.id) && argv.id.length !== 1) {
      throw 'Только одна переменная id за раз';
    }

    return true;
  }),
  handler: (0, _handlers.makeAddressHandler)(action, true)
};
var _default = readCommand;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jbGkvY29tbWFuZHMvcmVhZC50cyJdLCJuYW1lcyI6WyJhY3Rpb24iLCJkZXZpY2UiLCJhcmdzIiwiaWRPck5hbWUiLCJpZCIsImdldElkIiwidmFsdWUiLCJPYmplY3QiLCJ2YWx1ZXMiLCJyZWFkIiwiZXJyb3IiLCJFcnJvciIsInF1aWV0IiwiY29uc29sZSIsImxvZyIsIkpTT04iLCJzdHJpbmdpZnkiLCJyYXciLCJnZXRSYXdWYWx1ZSIsInJlYWRDb21tYW5kIiwiY29tbWFuZCIsImRlc2NyaWJlIiwiYnVpbGRlciIsImFyZ3YiLCJkZW1hbmRPcHRpb24iLCJjaGVjayIsIkFycmF5IiwiaXNBcnJheSIsImxlbmd0aCIsImhhbmRsZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFhQTs7QUFLTyxlQUFlQSxNQUFmLENBQXNCQyxNQUF0QixFQUF1Q0MsSUFBdkMsRUFBa0U7QUFDdkUsUUFBTUMsUUFBUSxHQUFHRCxJQUFJLENBQUNFLEVBQUwsQ0FBUSxDQUFSLENBQWpCOztBQUNBLE1BQUlELFFBQUosRUFBYztBQUNaLFVBQU1DLEVBQUUsR0FBR0gsTUFBTSxDQUFDSSxLQUFQLENBQWFGLFFBQWIsQ0FBWDtBQUNBLFVBQU1HLEtBQUssR0FBR0MsTUFBTSxDQUFDQyxNQUFQLEVBQWMsTUFBTVAsTUFBTSxDQUFDUSxJQUFQLENBQVlMLEVBQVosQ0FBcEIsR0FBcUMsQ0FBckMsQ0FBZDtBQUNBLFFBQUlFLEtBQUssQ0FBQ0ksS0FBVixFQUFpQixNQUFNLElBQUlDLEtBQUosQ0FBVUwsS0FBSyxDQUFDSSxLQUFoQixDQUFOO0FBQ2pCUixJQUFBQSxJQUFJLENBQUNVLEtBQUwsSUFBY0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQUksQ0FBQ0MsU0FBTCxDQUFlZCxJQUFJLENBQUNlLEdBQUwsR0FBV2hCLE1BQU0sQ0FBQ2lCLFdBQVAsQ0FBbUJkLEVBQW5CLENBQVgsR0FBb0NFLEtBQW5ELENBQVosQ0FBZDtBQUNEO0FBQ0Y7O0FBRUQsTUFBTWEsV0FBZ0QsR0FBRztBQUN2REMsRUFBQUEsT0FBTyxFQUFFLE1BRDhDO0FBRXZEQyxFQUFBQSxRQUFRLEVBQUUsK0JBRjZDO0FBR3ZEQyxFQUFBQSxPQUFPLEVBQUVDLElBQUksSUFBSUEsSUFBSSxDQUNsQkMsWUFEYyxDQUNELENBQUMsSUFBRCxFQUFPLE1BQVAsRUFBZSxLQUFmLEVBQXNCLEdBQXRCLENBREMsRUFFZEMsS0FGYyxDQUVQRixJQUFELElBQVU7QUFDZixRQUFJRyxLQUFLLENBQUNDLE9BQU4sQ0FBY0osSUFBSSxDQUFDbkIsRUFBbkIsS0FBMEJtQixJQUFJLENBQUNuQixFQUFMLENBQVF3QixNQUFSLEtBQW1CLENBQWpELEVBQW9EO0FBQ2xELFlBQU0sa0NBQU47QUFDRDs7QUFDRCxXQUFPLElBQVA7QUFDRCxHQVBjLENBSHNDO0FBV3ZEQyxFQUFBQSxPQUFPLEVBQUUsa0NBQW1CN0IsTUFBbkIsRUFBMkIsSUFBM0I7QUFYOEMsQ0FBekQ7ZUFjZW1CLFciLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxOS4gTmF0YS1JbmZvXG4gKiBAYXV0aG9yIEFuZHJlaSBTYXJha2VldiA8YXZzQG5hdGEtaW5mby5ydT5cbiAqXG4gKiBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgXCJAbmF0YVwiIHByb2plY3QuXG4gKiBGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2Ugdmlld1xuICogdGhlIEVVTEEgZmlsZSB0aGF0IHdhcyBkaXN0cmlidXRlZCB3aXRoIHRoaXMgc291cmNlIGNvZGUuXG4gKi9cblxuaW1wb3J0IHsgQXJndW1lbnRzLCBDb21tYW5kTW9kdWxlLCBEZWZpbmVkIH0gZnJvbSAneWFyZ3MnO1xuXG5pbXBvcnQgeyBJRGV2aWNlIH0gZnJvbSAnQG5pYnVzL2NvcmUvbGliL21pYic7XG5pbXBvcnQgeyBtYWtlQWRkcmVzc0hhbmRsZXIgfSBmcm9tICcuLi9oYW5kbGVycyc7XG5pbXBvcnQgeyBDb21tb25PcHRzIH0gZnJvbSAnLi4vb3B0aW9ucyc7XG5cbnR5cGUgUmVhZE9wdHMgPSBEZWZpbmVkPENvbW1vbk9wdHMsICdpZCcgfCAnbmFtZScgfCAnbScgfCAnbWFjJz47XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhY3Rpb24oZGV2aWNlOiBJRGV2aWNlLCBhcmdzOiBBcmd1bWVudHM8UmVhZE9wdHM+KSB7XG4gIGNvbnN0IGlkT3JOYW1lID0gYXJncy5pZFswXTtcbiAgaWYgKGlkT3JOYW1lKSB7XG4gICAgY29uc3QgaWQgPSBkZXZpY2UuZ2V0SWQoaWRPck5hbWUpO1xuICAgIGNvbnN0IHZhbHVlID0gT2JqZWN0LnZhbHVlcyhhd2FpdCBkZXZpY2UucmVhZChpZCkpWzBdO1xuICAgIGlmICh2YWx1ZS5lcnJvcikgdGhyb3cgbmV3IEVycm9yKHZhbHVlLmVycm9yKTtcbiAgICBhcmdzLnF1aWV0IHx8IGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KGFyZ3MucmF3ID8gZGV2aWNlLmdldFJhd1ZhbHVlKGlkKSA6IHZhbHVlKSk7XG4gIH1cbn1cblxuY29uc3QgcmVhZENvbW1hbmQ6IENvbW1hbmRNb2R1bGU8Q29tbW9uT3B0cywgUmVhZE9wdHM+ID0ge1xuICBjb21tYW5kOiAncmVhZCcsXG4gIGRlc2NyaWJlOiAn0L/RgNC+0YfQuNGC0LDRgtGMINC30L3QsNGH0LXQvdC40LUg0L/QtdGA0LXQvNC10L3QvdC+0LknLFxuICBidWlsZGVyOiBhcmd2ID0+IGFyZ3ZcbiAgICAuZGVtYW5kT3B0aW9uKFsnaWQnLCAnbmFtZScsICdtYWMnLCAnbSddKVxuICAgIC5jaGVjaygoYXJndikgPT4ge1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoYXJndi5pZCkgJiYgYXJndi5pZC5sZW5ndGggIT09IDEpIHtcbiAgICAgICAgdGhyb3cgJ9Ci0L7Qu9GM0LrQviDQvtC00L3QsCDQv9C10YDQtdC80LXQvdC90LDRjyBpZCDQt9CwINGA0LDQtyc7XG4gICAgICB9XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9KSxcbiAgaGFuZGxlcjogbWFrZUFkZHJlc3NIYW5kbGVyKGFjdGlvbiwgdHJ1ZSksXG59O1xuXG5leHBvcnQgZGVmYXVsdCByZWFkQ29tbWFuZDtcbiJdfQ==